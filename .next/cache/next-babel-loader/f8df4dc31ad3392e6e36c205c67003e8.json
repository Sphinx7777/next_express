{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport fetch from 'isomorphic-unfetch';\nexport var postsApi = {\n  getAllPosts: function getAllPosts() {\n    var resJson, res;\n    return _regeneratorRuntime.async(function getAllPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3000/posts/all'));\n\n          case 3:\n            resJson = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"some error \".concat(_context.t0.message));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  } //  async createNewPost() {\n  //     try {\n  //         const res = await fetch('http://localhost:3000/posts/all');\n  //         const res_1 = await res.json();\n  //         return res_1.data;\n  //     }catch (err){\n  //         console.log(`some error ${err.message}`)\n  //     }\n  //  }\n\n};","map":{"version":3,"sources":["D:/Next/next_express/src/api/api.js"],"names":["fetch","postsApi","getAllPosts","resJson","res","json","data","console","log","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAGA,OAAO,IAAMC,QAAQ,GAAG;AAEjBC,EAAAA,WAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAIUF,KAAK,CAAC,iCAAD,CAJf;;AAAA;AAING,YAAAA,OAJM;AAAA;AAAA,6CAKMC,GAAG,CAACC,IAAJ,EALN;;AAAA;AAKND,YAAAA,GALM;AAAA,6CAMLA,GAAG,CAACE,IANC;;AAAA;AAAA;AAAA;AAQZC,YAAAA,OAAO,CAACC,GAAR,sBAA0B,YAAIC,OAA9B;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AApBuB,CAAjB","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\n\r\nexport const postsApi = {\r\n\r\n\tasync getAllPosts() {\r\n        try {\r\n            const resJson = await fetch('http://localhost:3000/posts/all');\r\n            const res = await res.json();\r\n            return res.data;\r\n        }catch (err){\r\n            console.log(`some error ${err.message}`)\r\n        }\r\n     },\r\n     \r\n    //  async createNewPost() {\r\n    //     try {\r\n    //         const res = await fetch('http://localhost:3000/posts/all');\r\n    //         const res_1 = await res.json();\r\n    //         return res_1.data;\r\n    //     }catch (err){\r\n    //         console.log(`some error ${err.message}`)\r\n    //     }\r\n\t//  }\r\n};"]},"metadata":{},"sourceType":"module"}