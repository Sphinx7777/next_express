{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { Form } from '../src/Components/form';\nimport { postsApi } from '../src/api/api';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      posts: this.props.posts || []\n    });\n\n    _defineProperty(this, \"newPost\", async post => {\n      const response = await postsApi.createNewPost(post); // const response = await fetch('http://localhost:3000/posts/add', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json;charset=utf-8'\n      //   },\n      //   body: JSON.stringify(post)\n      // })\n      // const json = await response.json()\n\n      this.setState({\n        posts: [...this.state.posts, response]\n      });\n    });\n\n    _defineProperty(this, \"deletePost\", async id => {\n      const response = await fetch(`http://localhost:3000/posts/del/${id}`, {\n        method: 'DELETE'\n      });\n      this.setState({\n        posts: this.state.posts.filter(post => post._id !== id)\n      });\n    });\n  }\n\n  // setNewDescription = (e) => {\n  //   this.setState({\n  //     newDescription: e.target.value\n  //   });\n  // }\n  // updatePost = async (id) => {\n  //   const response = await fetch(`http://localhost:3000//posts/update/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json;charset=utf-8'\n  //     },\n  //     body: JSON.stringify(this.state.newDescription)\n  //   })\n  //   const json = await response.json()\n  //   console.log(json)\n  // this.setState({\n  //   posts: [...this.state.posts, json]\n  // });\n  // }\n  // toogleEditMode = (id) => {\n  //   this.setState({\n  //     posts: this.state.posts.map(post => post.id)\n  //   });\n  // }\n  render() {\n    const posts = this.state.posts;\n    return __jsx(\"div\", null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"\\u0433\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\")), posts.map(post => __jsx(\"div\", {\n      key: post._id\n    }, __jsx(\"h1\", null, post.title), __jsx(\"p\", null, \"\\u0410\\u0432\\u0442\\u043E\\u0440: \", post.autor), __jsx(\"button\", {\n      onClick: () => this.deletePost(post._id)\n    }, \"delete\"))), __jsx(Form, {\n      newPost: this.newPost\n    }));\n  }\n\n}\n\n_defineProperty(Post, \"getInitialProps\", async context => {\n  if (context.req) {\n    return {\n      posts: context.query\n    };\n  } else {\n    return {\n      posts: await postsApi.getAllPosts()\n    };\n  }\n});\n\nexport default Post;","map":{"version":3,"sources":["D:/Next/next_express/pages/posts.js"],"names":["React","Component","fetch","Link","Form","postsApi","Post","posts","props","post","response","createNewPost","setState","state","id","method","filter","_id","render","map","title","autor","deletePost","newPost","context","req","query","getAllPosts"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCAEnB;AACNM,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,IAAoB;AADrB,KAFmB;;AAAA,qCAcjB,MAAOE,IAAP,IAAgB;AAC5B,YAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,aAAT,CAAuBF,IAAvB,CAAvB,CAD4B,CAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAKG,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKM,KAAL,CAAWN,KAAf,EAAsBG,QAAtB;AADK,OAAd;AAGD,KA5B0B;;AAAA,wCA8Bd,MAAOI,EAAP,IAAc;AACzB,YAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAAE,mCAAkCY,EAAG,EAAvC,EAA0C;AACpEC,QAAAA,MAAM,EAAE;AAD4D,OAA1C,CAA5B;AAGA,WAAKH,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWN,KAAX,CAAiBS,MAAjB,CAAwBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaH,EAA7C;AADK,OAAd;AAGD,KArC0B;AAAA;;AAuC3B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIAI,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKM,KAAL,CAAWN,KAAzB;AACA,WACE,mBACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,8DADF,CADF,EAIGA,KAAK,CAACY,GAAN,CAAUV,IAAI,IAAI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACQ;AAAf,OACjB,kBAAKR,IAAI,CAACW,KAAV,CADiB,EAEjB,qDAAWX,IAAI,CAACY,KAAhB,CAFiB,EAGjB;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,CAAgBb,IAAI,CAACQ,GAArB;AAAvB,gBAHiB,CAAlB,CAJH,EAUE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKM;AAApB,MAVF,CADF;AAcD;;AArF0B;;gBAAvBjB,I,qBAMqB,MAAOkB,OAAP,IAAmB;AAC1C,MAAIA,OAAO,CAACC,GAAZ,EAAiB;AACjB,WAAO;AAAElB,MAAAA,KAAK,EAAEiB,OAAO,CAACE;AAAjB,KAAP;AACC,GAFD,MAEO;AACP,WAAO;AAACnB,MAAAA,KAAK,EAAE,MAAMF,QAAQ,CAACsB,WAAT;AAAd,KAAP;AACC;AACF,C;;AA2EH,eAAerB,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport { Form } from '../src/Components/form'\r\nimport { postsApi } from '../src/api/api';\r\n\r\nclass Post extends Component {\r\n\r\n  state = {\r\n    posts: this.props.posts || []\r\n  };\r\n\r\n  static getInitialProps = async (context) => {\r\n    if (context.req) {\r\n    return { posts: context.query }\r\n    } else {\r\n    return {posts: await postsApi.getAllPosts()}\r\n    }\r\n  }\r\n\r\n  newPost = async (post) => {\r\nconst response = await postsApi.createNewPost(post)\r\n\r\n    // const response = await fetch('http://localhost:3000/posts/add', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json;charset=utf-8'\r\n    //   },\r\n    //   body: JSON.stringify(post)\r\n    // })\r\n    // const json = await response.json()\r\n    this.setState({\r\n      posts: [...this.state.posts, response]\r\n    });\r\n  }\r\n\r\n  deletePost = async (id) => {\r\n    const response = await fetch(`http://localhost:3000/posts/del/${id}`, {\r\n      method: 'DELETE'\r\n    })\r\n    this.setState({\r\n      posts: this.state.posts.filter(post => post._id !== id)\r\n    });\r\n  }\r\n\r\n  // setNewDescription = (e) => {\r\n  //   this.setState({\r\n  //     newDescription: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  // updatePost = async (id) => {\r\n  //   const response = await fetch(`http://localhost:3000//posts/update/${id}`, {\r\n  //     method: 'PUT',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json;charset=utf-8'\r\n  //     },\r\n  //     body: JSON.stringify(this.state.newDescription)\r\n  //   })\r\n  //   const json = await response.json()\r\n  //   console.log(json)\r\n\r\n  // this.setState({\r\n  //   posts: [...this.state.posts, json]\r\n  // });\r\n  // }\r\n\r\n  // toogleEditMode = (id) => {\r\n  //   this.setState({\r\n  //     posts: this.state.posts.map(post => post.id)\r\n  //   });\r\n  // }\r\n\r\n\r\n\r\n  render() {\r\n    const posts = this.state.posts;\r\n    return (\r\n      <div>\r\n        <Link href=\"/\">\r\n          <a>главная</a>\r\n        </Link>\r\n        {posts.map(post => <div key={post._id}>\r\n          <h1>{post.title}</h1>\r\n          <p>Автор: {post.autor}</p>\r\n          <button onClick={() => this.deletePost(post._id)}>delete</button>\r\n        </div>\r\n        )}\r\n        <Form newPost={this.newPost} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}