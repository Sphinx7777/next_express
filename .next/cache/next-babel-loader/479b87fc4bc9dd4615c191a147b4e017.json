{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { Form } from '../src/Components/form';\nimport { postsApi } from '../src/api/api';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      posts: this.props.posts || []\n    });\n\n    _defineProperty(this, \"newPost\", async post => {\n      const response = await postsApi.createNewPost(post);\n      this.setState({\n        posts: [...this.state.posts, response]\n      });\n    });\n\n    _defineProperty(this, \"deletePost\", async id => {\n      const response = await postsApi.dellPost(id);\n      this.setState({\n        posts: this.state.posts.filter(post => post._id !== response.id)\n      });\n    });\n  }\n\n  // updatePost = async (id) => {\n  //   const response = await fetch(`http://localhost:3000//posts/update/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json;charset=utf-8'\n  //     },\n  //     body: JSON.stringify(this.state.newDescription)\n  //   })\n  //   const json = await response.json()\n  //   console.log(json)\n  // this.setState({\n  //   posts: [...this.state.posts, json]\n  // });\n  // }\n  render() {\n    const posts = this.state.posts;\n    return __jsx(\"div\", null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"\\u0433\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\")), posts.map(post => __jsx(\"div\", {\n      key: post._id,\n      onClick: () => Router.push(`/view/${post._id}`)\n    }, __jsx(\"h1\", null, post.title), __jsx(\"p\", null, \"\\u0410\\u0432\\u0442\\u043E\\u0440: \", post.autor), __jsx(\"p\", null, \"createdDate: \", post.createdDate.toString()), __jsx(\"button\", {\n      onClick: () => this.deletePost(post._id)\n    }, \"delete\"))), __jsx(Form, {\n      newPost: this.newPost\n    }));\n  }\n\n}\n\n_defineProperty(Post, \"getInitialProps\", async context => {\n  if (context.req) {\n    return {\n      posts: context.query\n    };\n  } else {\n    return {\n      posts: await postsApi.getAllPosts()\n    };\n  }\n});\n\nexport default Post;","map":{"version":3,"sources":["D:/Next/next_express/pages/posts.js"],"names":["React","Component","Link","Form","postsApi","Post","posts","props","post","response","createNewPost","setState","state","id","dellPost","filter","_id","render","map","Router","push","title","autor","createdDate","toString","deletePost","newPost","context","req","query","getAllPosts"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCAEnB;AACNK,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,IAAoB;AADrB,KAFmB;;AAAA,qCAcjB,MAAOE,IAAP,IAAgB;AACxB,YAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,aAAT,CAAuBF,IAAvB,CAAvB;AACA,WAAKG,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKM,KAAL,CAAWN,KAAf,EAAsBG,QAAtB;AADK,OAAd;AAGD,KAnB0B;;AAAA,wCAqBd,MAAOI,EAAP,IAAc;AACzB,YAAMJ,QAAQ,GAAG,MAAML,QAAQ,CAACU,QAAT,CAAkBD,EAAlB,CAAvB;AACA,WAAKF,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWN,KAAX,CAAiBS,MAAjB,CAAwBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaP,QAAQ,CAACI,EAAtD;AADK,OAAd;AAGD,KA1B0B;AAAA;;AA8B3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKAI,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKM,KAAL,CAAWN,KAAzB;AACA,WACE,mBACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,8DADF,CADF,EAIGA,KAAK,CAACY,GAAN,CAAUV,IAAI,IACb;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACQ,GAAf;AAAoB,MAAA,OAAO,EAAE,MAAMG,MAAM,CAACC,IAAP,CAAa,SAAQZ,IAAI,CAACQ,GAAI,EAA9B;AAAnC,OACE,kBAAKR,IAAI,CAACa,KAAV,CADF,EAEE,qDAAWb,IAAI,CAACc,KAAhB,CAFF,EAGE,kCAAiBd,IAAI,CAACe,WAAL,CAAiBC,QAAjB,EAAjB,CAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,CAAgBjB,IAAI,CAACQ,GAArB;AAAvB,gBAJF,CADD,CAJH,EAYE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKU;AAApB,MAZF,CADF;AAgBD;;AAnE0B;;gBAAvBrB,I,qBAMqB,MAAOsB,OAAP,IAAmB;AAC1C,MAAIA,OAAO,CAACC,GAAZ,EAAiB;AACf,WAAO;AAAEtB,MAAAA,KAAK,EAAEqB,OAAO,CAACE;AAAjB,KAAP;AACD,GAFD,MAEO;AACL,WAAO;AAAEvB,MAAAA,KAAK,EAAE,MAAMF,QAAQ,CAAC0B,WAAT;AAAf,KAAP;AACD;AACF,C;;AAyDH,eAAezB,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Link from 'next/link'\r\nimport { Form } from '../src/Components/form'\r\nimport { postsApi } from '../src/api/api';\r\n\r\nclass Post extends Component {\r\n\r\n  state = {\r\n    posts: this.props.posts || []\r\n  };\r\n\r\n  static getInitialProps = async (context) => {\r\n    if (context.req) {\r\n      return { posts: context.query }\r\n    } else {\r\n      return { posts: await postsApi.getAllPosts() }\r\n    }\r\n  }\r\n\r\n  newPost = async (post) => {\r\n    const response = await postsApi.createNewPost(post)\r\n    this.setState({\r\n      posts: [...this.state.posts, response]\r\n    });\r\n  }\r\n\r\n  deletePost = async (id) => {\r\n    const response = await postsApi.dellPost(id)\r\n    this.setState({\r\n      posts: this.state.posts.filter(post => post._id !== response.id)\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // updatePost = async (id) => {\r\n  //   const response = await fetch(`http://localhost:3000//posts/update/${id}`, {\r\n  //     method: 'PUT',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json;charset=utf-8'\r\n  //     },\r\n  //     body: JSON.stringify(this.state.newDescription)\r\n  //   })\r\n  //   const json = await response.json()\r\n  //   console.log(json)\r\n\r\n  // this.setState({\r\n  //   posts: [...this.state.posts, json]\r\n  // });\r\n  // }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const posts = this.state.posts;\r\n    return (\r\n      <div>\r\n        <Link href=\"/\">\r\n          <a>главная</a>\r\n        </Link>\r\n        {posts.map(post =>\r\n          <div key={post._id} onClick={() => Router.push(`/view/${post._id}`)}>\r\n            <h1>{post.title}</h1>\r\n            <p>Автор: {post.autor}</p>\r\n            <p>createdDate: {post.createdDate.toString()}</p>\r\n            <button onClick={() => this.deletePost(post._id)}>delete</button>\r\n          </div>\r\n        )}\r\n        <Form newPost={this.newPost} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}