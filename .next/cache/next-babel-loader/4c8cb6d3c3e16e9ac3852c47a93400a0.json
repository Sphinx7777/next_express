{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { Form } from '../src/Components/form';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      posts: this.props.posts || []\n    });\n\n    _defineProperty(this, \"newPost\", async post => {\n      const response = await fetch('http://localhost:3000/posts/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: _JSON$stringify(post)\n      });\n      const json = await response.json();\n      this.setState({\n        posts: [...this.state.posts, json]\n      });\n    });\n\n    _defineProperty(this, \"deletePost\", async id => {\n      const response = await fetch(`http://localhost:3000/posts/del/${id}`, {\n        method: 'DELETE'\n      });\n      this.setState({\n        posts: this.state.posts.filter(post => post._id !== id)\n      });\n    });\n  }\n\n  // setNewDescription = (e) => {\n  //   this.setState({\n  //     newDescription: e.target.value\n  //   });\n  // }\n  // updatePost = async (id) => {\n  //   const response = await fetch(`http://localhost:3000//posts/update/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json;charset=utf-8'\n  //     },\n  //     body: JSON.stringify(this.state.newDescription)\n  //   })\n  //   const json = await response.json()\n  //   console.log(json)\n  // this.setState({\n  //   posts: [...this.state.posts, json]\n  // });\n  // }\n  // toogleEditMode = (id) => {\n  //   this.setState({\n  //     posts: this.state.posts.map(post => post.id)\n  //   });\n  // }\n  render() {\n    const posts = this.state.posts;\n    return __jsx(\"div\", null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"back\")), posts.map(post => __jsx(\"div\", {\n      key: post._id\n    }, __jsx(\"h1\", null, \"My blog post: \", post.name), __jsx(\"p\", null, post.description), __jsx(\"button\", {\n      onClick: () => this.deletePost(post._id)\n    }, \"delete\"))), __jsx(Form, {\n      newPost: this.newPost\n    }));\n  }\n\n}\n\n_defineProperty(Post, \"getInitialProps\", async context => {\n  if (context.req) {\n    return {\n      posts: _Array$from(context.query)\n    };\n  } else {\n    const res = await fetch('http://localhost:3000/posts/all');\n    const json = await res.json();\n    console.log(json);\n    return {\n      posts: json.data\n    };\n  }\n});\n\nexport default Post;","map":{"version":3,"sources":["D:/Next/next_express/pages/posts.js"],"names":["React","Component","fetch","Link","Form","Post","posts","props","post","response","method","headers","body","json","setState","state","id","filter","_id","render","map","name","description","deletePost","newPost","context","req","query","res","console","log","data"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,wBAArB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCAEnB;AACNK,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,IAAoB;AADrB,KAFmB;;AAAA,qCAiBjB,MAAOE,IAAP,IAAgB;AACxB,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC,iCAAD,EAAoC;AAC9DQ,QAAAA,MAAM,EAAE,MADsD;AAE9DC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFqD;AAK9DC,QAAAA,IAAI,EAAE,gBAAeJ,IAAf;AALwD,OAApC,CAA5B;AAOA,YAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKS,KAAL,CAAWT,KAAf,EAAsBO,IAAtB;AADK,OAAd;AAGD,KA7B0B;;AAAA,wCA+Bd,MAAOG,EAAP,IAAc;AACzB,YAAMP,QAAQ,GAAG,MAAMP,KAAK,CAAE,mCAAkCc,EAAG,EAAvC,EAA0C;AACpEN,QAAAA,MAAM,EAAE;AAD4D,OAA1C,CAA5B;AAGA,WAAKI,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWT,KAAX,CAAiBW,MAAjB,CAAwBT,IAAI,IAAIA,IAAI,CAACU,GAAL,KAAaF,EAA7C;AADK,OAAd;AAGD,KAtC0B;AAAA;;AAwC3B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIAG,EAAAA,MAAM,GAAG;AACP,UAAMb,KAAK,GAAG,KAAKS,KAAL,CAAWT,KAAzB;AACA,WACE,mBACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,wBADF,CADF,EAIGA,KAAK,CAACc,GAAN,CAAUZ,IAAI,IAAI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACU;AAAf,OACjB,oCAAmBV,IAAI,CAACa,IAAxB,CADiB,EAEnB,iBAAIb,IAAI,CAACc,WAAT,CAFmB,EAGjB;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,CAAgBf,IAAI,CAACU,GAArB;AAAvB,gBAHiB,CAAlB,CAJH,EAUE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKM;AAApB,MAVF,CADF;AAcD;;AAtF0B;;gBAAvBnB,I,qBAMqB,MAAOoB,OAAP,IAAmB;AAC1C,MAAIA,OAAO,CAACC,GAAZ,EAAiB;AACf,WAAO;AAAEpB,MAAAA,KAAK,EAAE,YAAWmB,OAAO,CAACE,KAAnB;AAAT,KAAP;AACD,GAFD,MAEO;AACL,UAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC,iCAAD,CAAvB;AACA,UAAMW,IAAI,GAAG,MAAMe,GAAG,CAACf,IAAJ,EAAnB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,WAAO;AAAEP,MAAAA,KAAK,EAAEO,IAAI,CAACkB;AAAd,KAAP;AACD;AACF,C;;AAyEH,eAAe1B,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport { Form } from '../src/Components/form'\r\n\r\nclass Post extends Component {\r\n\r\n  state = {\r\n    posts: this.props.posts || []\r\n  };\r\n\r\n  static getInitialProps = async (context) => {\r\n    if (context.req) {\r\n      return { posts: Array.from(context.query) }\r\n    } else {\r\n      const res = await fetch('http://localhost:3000/posts/all')\r\n      const json = await res.json()\r\n      console.log(json)\r\n      return { posts: json.data }\r\n    }\r\n  }\r\n\r\n  newPost = async (post) => {\r\n    const response = await fetch('http://localhost:3000/posts/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(post)\r\n    })\r\n    const json = await response.json()\r\n    this.setState({\r\n      posts: [...this.state.posts, json]\r\n    });\r\n  }\r\n\r\n  deletePost = async (id) => {\r\n    const response = await fetch(`http://localhost:3000/posts/del/${id}`, {\r\n      method: 'DELETE'\r\n    })\r\n    this.setState({\r\n      posts: this.state.posts.filter(post => post._id !== id)\r\n    });\r\n  }\r\n\r\n  // setNewDescription = (e) => {\r\n  //   this.setState({\r\n  //     newDescription: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  // updatePost = async (id) => {\r\n  //   const response = await fetch(`http://localhost:3000//posts/update/${id}`, {\r\n  //     method: 'PUT',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json;charset=utf-8'\r\n  //     },\r\n  //     body: JSON.stringify(this.state.newDescription)\r\n  //   })\r\n  //   const json = await response.json()\r\n  //   console.log(json)\r\n\r\n  // this.setState({\r\n  //   posts: [...this.state.posts, json]\r\n  // });\r\n  // }\r\n\r\n  // toogleEditMode = (id) => {\r\n  //   this.setState({\r\n  //     posts: this.state.posts.map(post => post.id)\r\n  //   });\r\n  // }\r\n\r\n\r\n\r\n  render() {\r\n    const posts = this.state.posts;\r\n    return (\r\n      <div>\r\n        <Link href=\"/\">\r\n          <a>back</a>\r\n        </Link>\r\n        {posts.map(post => <div key={post._id}>\r\n          <h1>My blog post: {post.name}</h1>\r\n        <p>{post.description}</p>\r\n          <button onClick={() => this.deletePost(post._id)}>delete</button>\r\n        </div>\r\n        )}\r\n        <Form newPost={this.newPost} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}