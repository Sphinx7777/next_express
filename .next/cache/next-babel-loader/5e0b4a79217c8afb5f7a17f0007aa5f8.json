{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\n\nvar View = function View(props) {\n  console.log(props);\n  return __jsx(\"div\", null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"back\")), __jsx(\"div\", null, \"view&edit\"), __jsx(\"span\", {\n    onClick: function onClick() {\n      return Router.push('/posts');\n    }\n  }, \"posts\"));\n};\n\nView.getInitialProps = function _callee(context) {\n  var postId, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          postId = context.query._id;\n\n          if (!context.req) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            post: context.query\n          });\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/view/\".concat(postId)));\n\n        case 5:\n          res = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 8:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            post: json.post\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(View);","map":{"version":3,"sources":["D:/Next/next_express/pages/view.js"],"names":["Link","Router","withRouter","View","props","console","log","push","getInitialProps","context","postId","query","_id","req","post","fetch","res","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAEpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACI,mBACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACI,wBADJ,CADJ,EAII,+BAJJ,EAKI;AAAM,IAAA,OAAO,EAAE;AAAA,aAAMH,MAAM,CAACM,IAAP,CAAY,QAAZ,CAAN;AAAA;AAAf,aALJ,CADJ;AAUH,CAdD;;AAeAJ,IAAI,CAACK,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,MADa,GACJD,OAAO,CAACE,KAAR,CAAcC,GADV;;AAAA,eAEfH,OAAO,CAACI,GAFO;AAAA;AAAA;AAAA;;AAAA,2CAGR;AAAEC,YAAAA,IAAI,EAAEL,OAAO,CAACE;AAAhB,WAHQ;;AAAA;AAAA;AAAA,2CAKDI,KAAK,sCAA+BL,MAA/B,EALJ;;AAAA;AAKbM,UAAAA,GALa;AAAA;AAAA,2CAMAA,GAAG,CAACC,IAAJ,EANA;;AAAA;AAMbA,UAAAA,IANa;AAAA,2CAOZ;AAAEH,YAAAA,IAAI,EAAEG,IAAI,CAACH;AAAb,WAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeZ,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import Link from 'next/link'\r\nimport Router, { withRouter } from 'next/router'\r\n\r\nconst View = (props) => {\r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <div>\r\n            <Link href=\"/\">\r\n                <a>back</a>\r\n            </Link>\r\n            <div>view&edit</div>\r\n            <span onClick={() => Router.push('/posts')}>posts</span>\r\n        </div>\r\n\r\n    )\r\n}\r\nView.getInitialProps = async (context) => {\r\n    const postId = context.query._id\r\n    if (context.req) {\r\n        return { post: context.query }\r\n    }\r\n    const res = await fetch(`http://localhost:3000/view/${postId}`)\r\n    const json = await res.json()\r\n    return { post: json.post }\r\n}\r\nexport default withRouter(View);    "]},"metadata":{},"sourceType":"module"}