{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button } from './Button';\nexport var Form = function Form(props) {\n  var _useState = useState(''),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(''),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var autor = props.autor;\n\n  var onChangeName = function onChangeName(e) {\n    setTitle(e.target.value);\n  };\n\n  var onChangeDescription = function onChangeDescription(e) {\n    setDescription(e.target.value);\n  };\n\n  var submit = function submit(e) {\n    var createdDate, data;\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            createdDate = new Date().toUTCString();\n            data = {\n              post: {\n                title: title,\n                description: description,\n                autor: autor,\n                createdDate: createdDate\n              },\n              id: props.id\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(props.newPost(data));\n\n          case 5:\n            setTitle('');\n            setDescription('');\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: submit\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n    value: title,\n    onChange: onChangeName\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n    value: description,\n    onChange: onChangeDescription\n  }), __jsx(Button, {\n    type: \"submit\"\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n};","map":{"version":3,"sources":["D:/Next/next_express/src/Components/form.js"],"names":["React","useState","Button","Form","props","title","setTitle","description","setDescription","autor","onChangeName","e","target","value","onChangeDescription","submit","preventDefault","createdDate","Date","toUTCString","data","post","id","newPost"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,kBACDH,QAAQ,CAAC,EAAD,CADP;AAAA,MACpBI,KADoB;AAAA,MACbC,QADa;;AAAA,mBAEWL,QAAQ,CAAC,EAAD,CAFnB;AAAA,MAEpBM,WAFoB;AAAA,MAEPC,cAFO;;AAG3B,MAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AACxBL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,CAAD,EAAO;AAC/BH,IAAAA,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAIA,MAAME,MAAM,GAAG,SAATA,MAAS,CAAOJ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXA,YAAAA,CAAC,CAACK,cAAF;AACMC,YAAAA,WAFK,GAES,IAAIC,IAAJ,GAAWC,WAAX,EAFT;AAGLC,YAAAA,IAHK,GAGE;AACTC,cAAAA,IAAI,EAAE;AACFhB,gBAAAA,KAAK,EAALA,KADE;AACKE,gBAAAA,WAAW,EAAXA,WADL;AACkBE,gBAAAA,KAAK,EAALA,KADlB;AACyBQ,gBAAAA,WAAW,EAAXA;AADzB,eADG;AAITK,cAAAA,EAAE,EAAElB,KAAK,CAACkB;AAJD,aAHF;AAAA;AAAA,6CASLlB,KAAK,CAACmB,OAAN,CAAcH,IAAd,CATK;;AAAA;AAUXd,YAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,YAAAA,cAAc,CAAC,EAAD,CAAd;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAcA,SACI;AAAM,IAAA,QAAQ,EAAEO;AAAhB,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,wDAFhB;AAGI,IAAA,KAAK,EAAEV,KAHX;AAII,IAAA,QAAQ,EAAEK;AAJd,IADJ,EAOI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,kDAFhB;AAGI,IAAA,KAAK,EAAEH,WAHX;AAII,IAAA,QAAQ,EAAEO;AAJd,IAPJ,EAYI,MAAC,MAAD;AACI,IAAA,IAAI,EAAC;AADT,8DAZJ,CADJ;AAmBH,CA9CM","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button } from './Button'\r\n\r\nexport const Form = (props) => {\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const autor = props.autor\r\n\r\n    const onChangeName = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const onChangeDescription = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        const createdDate = new Date().toUTCString()\r\n        const data = {\r\n            post: {\r\n                title, description, autor, createdDate\r\n            },\r\n            id: props.id\r\n        }\r\n        await props.newPost(data);\r\n        setTitle('');\r\n        setDescription('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <input\r\n                type='text'\r\n                placeholder='Заголовок'\r\n                value={title}\r\n                onChange={onChangeName}\r\n            />\r\n            <input\r\n                type='text'\r\n                placeholder='Описание'\r\n                value={description}\r\n                onChange={onChangeDescription} />\r\n            <Button \r\n                type='submit'>\r\n                Отправить\r\n            </Button>\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}